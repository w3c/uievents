<section>
<h2 id="event-interfaces">Basic Event Interfaces</h2>


The basic event interfaces defined in [[!DOM]] are fundamental to UI
Events. These basic event interfaces MUST always be supported by the
implementation:

*   The {{Event}} interface and its following constants, methods and attributes:
    *   {{Event/NONE}} constant
    *   {{Event/CAPTURING_PHASE}} constant
    *   {{Event/AT_TARGET}} constant
    *   {{Event/BUBBLING_PHASE}} constant
    *   {{Event/type}} attribute
    *   {{Event/target}} attribute
    *   {{Event/currentTarget}} attribute
    *   {{Event/eventPhase}} attribute
    *   {{Event/bubbles}} attribute
    *   {{Event/cancelable}} attribute
    *   {{Event/composed}} attribute
    *   {{Event/timeStamp}} attribute
    *   {{Event/defaultPrevented}} attribute
    *   {{Event/isTrusted}} attribute
    *   {{Event/stopPropagation()}} method
    *   {{Event/stopImmediatePropagation()}} method
    *   {{Event/preventDefault()}} method
    *   {{Event/initEvent()}} method

*   The {{CustomEvent}} interface and its following method and attribute:
    *	{{CustomEvent/initCustomEvent()}} method
    *	{{CustomEvent/detail}} attribute

*   The {{EventTarget}} interface and its following methods:
    *	{{EventTarget/addEventListener()}} method
    *	{{EventTarget/removeEventListener()}} method
    *	{{EventTarget/dispatchEvent()}} method

*   The {{EventListener}} interface and its {{EventListener/handleEvent}} method
*   The {{Document}} interface's {{Document/createEvent()}} method

The event types defined in this specification derive from these basic interfaces, and MUST
inherit all of the attributes, methods, and constants of the interfaces they derive from.

The following chart describes the inheritance structure of the interfaces described in this specification.

<figure id="figure-event-inheritance">
    <img src='images/event-inheritance.svg' height="180" alt="Graphical representation of inheritance of interfaces defined by this specification" />
    <figcaption>Graphical representation of inheritance of interfaces defined by this specification</figcaption>
</figure>

<h3 id="event-types-list">List of Event Types</h3>

    Each event MUST be associated with a type, called <em>event type</em> and
    available as the {{Event/type}} attribute on the event object. The event
    type MUST be of type <code>DOMString</code>.

    Depending on the level of DOM support, or the devices used for display
    (e.g., screen) or interaction (e.g., mouse, keyboard, touch screen, or
    voice), these event types can be generated by the implementation. When
    used with an [[XML]] or [[HTML5]] application, the specifications of those
    languages MAY restrict the semantics and scope (in particular the possible
    <a>event targets</a>) associated with an event type. Refer to the
    specification defining the language used in order to find those
    restrictions or to find event types that are not defined in this document.

    The following table provides an informative summary of the event types
    described in this specification.

    ++-------------------+--------+----------+----------------+------------------+------------+-------------------------------------------------+
    =|    Event Type     | Sync / | Bubbling | Trusted event  |  DOM Interface   | Cancelable | Default Action                                  |
     |                   | Async  |  Phase   | target types   |                  |            |                                                 |
     +-------------------+---o----+----o-----+-------o--------+--------o---------+-----o------+-------------------------------------------------+
    +| abort             | Sync   | No       | <a>Window</a>, | Event            | No         | None                                            |
     |                   |        |          | Element        |                  |            |                                                 |
    +| beforeinput       | Sync   | Yes      | Element        | InputEvent       | Yes        | Update the DOM element                          |
    +| blur              | Sync   | No       | <a>Window</a>, | FocusEvent       | No         | None                                            |
     |                   |        |          | Element        |                  |            |                                                 |
    +| click             | Sync   | Yes      | Element        | MouseEvent       | Yes        | Varies: for <a>targets</a> with an associated   |
     |                   |        |          |                |                  |            | activation behavior, executes the <a>activation |
     |                   |        |          |                |                  |            | behavior</a>; for focusable <a>targets</a>,     |
     |                   |        |          |                |                  |            | gives the element focus.                        |
    +| compositionstart  | Sync   | Yes      | Element        | CompositionEvent | Yes        | Show a <a>text composition system</a> candidate |
     |                   |        |          |                |                  |            | window                                          |
    +| compositionupdate | Sync   | Yes      | Element        | CompositionEvent | No         | None                                            |
    +| compositionend    | Sync   | Yes      | Element        | CompositionEvent | No         | None                                            |
    +| dblclick          | Sync   | Yes      | Element        | MouseEvent       | No         | Varies: for <a>targets</a> with an associated   |
     |                   |        |          |                |                  |            | activation behavior, executes the <a>activation |
     |                   |        |          |                |                  |            | behavior</a>; for focusable <a>targets</a>,     |
     |                   |        |          |                |                  |            | gives the element focus; for selectable         |
     |                   |        |          |                |                  |            | <a>targets</a>, selects part or all of the      |
     |                   |        |          |                |                  |            | element's content.                              |
    +| error             | Async  | No       | <a>Window</a>, | Event            | No         | None                                            |
     |                   |        |          | Element        |                  |            |                                                 |
    +| focus             | Sync   | No       | <a>Window</a>, | FocusEvent       | No         | None                                            |
     |                   |        |          | Element        |                  |            |                                                 |
    +| focusin           | Sync   | Yes      | <a>Window</a>, | FocusEvent       | No         | None                                            |
     |                   |        |          | Element        |                  |            |                                                 |
    +| focusout          | Sync   | Yes      | <a>Window</a>, | FocusEvent       | No         | None                                            |
     |                   |        |          | Element        |                  |            |                                                 |
    +| input             | Sync   | Yes      | Element        | InputEvent       | No         | None                                            |
    +| keydown           | Sync   | Yes      | Element        | KeyboardEvent    | Yes        | Varies: trigger EVENT{beforeinput} and          |
     |                   |        |          |                |                  |            | EVENT{input} events;                            |
     |                   |        |          |                |                  |            | launch <a>text composition system</a>;          |
     |                   |        |          |                |                  |            | EVENT{blur} and EVENT{focus} events;            |
     |                   |        |          |                |                  |            | EVENT{keypress} event (if supported);           |
     |                   |        |          |                |                  |            | <a>activation behavior</a>;                     |
     |                   |        |          |                |                  |            | other events                                    |
    +| keyup             | Sync   | Yes      | Element        | KeyboardEvent    | Yes        | None                                            |
    +| load              | Async  | No       | <a>Window</a>, | Event            | No         | None                                            |
     |                   |        |          | Document,      |                  |            |                                                 |
     |                   |        |          | Element        |                  |            |                                                 |
    +| mousedown         | Sync   | Yes      | Element        | MouseEvent       | Yes        | Varies: start a drag/drop operation; start a    |
     |                   |        |          |                |                  |            | text selection; start a scroll/pan interaction  |
     |                   |        |          |                |                  |            | (in combination with the middle mouse button,   |
     |                   |        |          |                |                  |            | if supported)                                   |
    +| mouseenter        | Sync   | No       | Element        | MouseEvent       | No         | None                                            |
    +| mouseleave        | Sync   | No       | Element        | MouseEvent       | No         | None                                            |
    +| mousemove         | Sync   | Yes      | Element        | MouseEvent       | <a href="#mousemove-now-cancelable">Yes</a>     | None       |
    +| mouseout          | Sync   | Yes      | Element        | MouseEvent       | Yes        | None                                            |
    +| mouseover         | Sync   | Yes      | Element        | MouseEvent       | Yes        | None                                            |
    +| mouseup           | Sync   | Yes      | Element        | MouseEvent       | Yes        | Invoke a context menu (in combination with the  |
     |                   |        |          |                |                  |            | right mouse button, if supported)               |
    +| select            | Sync   | Yes      | Element        | Event            | No         | None                                            |
    +| unload            | Sync   | No       | <a>Window</a>, | Event            | No         | None                                            |
     |                   |        |          | Document,      |                  |            |                                                 |
     |                   |        |          | Element        |                  |            |                                                 |
    +| wheel             | Async  | Yes      | Element        | WheelEvent       | Yes        | Scroll (or zoom) the document                   |
    ++-------------------+--------+----------+----------------+------------------+------------+-------------------------------------------------+


    For a list of events which are deprecated in this specification, see the
    <a href="#legacy-event-types">Legacy Event Types</a> appendix at the end
    of this document.

    <p class="example">
    The following is one way to interpret the above tables: the EVENT{load}
    event will trigger <a>event listeners</a> attached on <code>Element</code> nodes
    for that event and on the capture and target phases. This event is not
    cancelable. If an <a>event listener</a> for the EVENT{load} event is attached to
    a node other than <a>Window</a>, <code>Document</code>, or
    <code>Element</code> nodes, or if it is attached to the bubbling phase
    only, this <a>event listener</a> would not be triggered.
    </p>

    <p class="note">
    Don't interpret the above tables as definitive for the listed event types.
    For example, the EVENT{load} event is used in other specifications, for
    example, in XMLHttpRequest. Similarly, {{EventTarget/dispatchEvent()}} can
    be used to dispatch untrusted events to listeners on <strong>any</strong>
    object that also implements {{EventTarget}}.
    </p>

    <p class="note">
    The event objects associated with the event types described above contain
    additional context information--refer to the description of the DOM
    interfaces for further information.
    </p>


</section>
